{% extends 'SonataAdminBundle:CRUD:base_edit.html.twig' %}
{% block form %}
    {% set url = admin.id(object) is not null ? 'edit' : 'create' %}

    {% if not admin.hasRoute(url)%}
        <div>
            {{ "form_not_available"|trans({}, "SonataAdminBundle") }}
        </div>
    {% else %}
        <form
              action="{{ admin.generateUrl(url, {'id': admin.id(object), 'uniqid': admin.uniqid, 'subclass': app.request.get('subclass')}) }}" {{ form_enctype(form) }}
              method="POST"
                {% if not admin_pool.getOption('html5_validate') %}novalidate="novalidate"{% endif %}
                >
            {% if form.vars.errors|length > 0 %}
                <div class="sonata-ba-form-error">
                    {{ form_errors(form) }}
                </div>
            {% endif %}

            <section class="panel panel-default">
                {% block sonata_pre_fieldsets %}
                <div class="tabbable">
                    <ul class="nav nav-tabs">
                        {% for name, form_group in admin.formgroups %}
                            <li class="{% if loop.first %}active{% endif %}">
                                <a href="#{{ admin.uniqid }}_{{ loop.index }}" data-toggle="tab">
                                    <i class="icon-exclamation-sign has-errors hide"></i>
                                    {{ admin.trans(name, {}, form_group.translation_domain) }}
                                </a>
                            </li>
                        {% endfor %}
                    </ul>
                    {% endblock %}

                    <div class="panel-body">

                        <div class="tab-content">
                            {% for name, form_group in admin.formgroups %}
                                <div class="tab-pane {% if loop.first %} active{% endif %}" id="{{ admin.uniqid }}_{{ loop.index }}">
                                    <fieldset>
                                        <div class="sonata-ba-collapsed-fields">
                                            {% if form_group.description != false %}
                                                <p>{{ form_group.description|raw }}</p>
                                            {% endif %}

                                            {% for field_name in form_group.fields %}
                                                {% if admin.formfielddescriptions[field_name] is defined %}
                                                    {{ form_row(form[field_name])}}
                                                {% endif %}
                                            {% endfor %}
                                        </div>
                                    </fieldset>
                                </div>
                            {% endfor %}

                            {{ form_rest(form) }}

                            {# CUSTOM #}
                            <div class="control-group" id="sonata-ba-field-container-s52a46b9f0442e_name">
                                <label class="control-label required" for="s52a46b9f0442e_name">
                                    Application fields
                                    *
                                </label>

                                <div class="controls sonata-ba-field sonata-ba-field-standard-natural  ">

                                    <div class="form-create-holder" id="main-create-holder">
                                        <input type="text" class="create-input-field" name="_fields[0][name]" id="0_name" placeholder="field name" style="width:150px;display:inline-block;"/>

                                        <button class="delete-row" style="display:none;">Delete row</button>
                                    </div>

                                    <div id="btnAddRow-holder">
                                        <a href="#" id="addrow">Add new row</a>
                                    </div>

                                </div>
                            </div>
                        </div>

                        {% block sonata_post_fieldsets %}
                    </div>
                    {% endblock %}

                    {% block formactions %}
                        <div class="well well-small form-actions">
                            {% if app.request.isxmlhttprequest %}
                                {% if admin.id(object) is not null %}
                                    <input type="submit" class="btn btn-primary" name="btn_update" value="{{ 'btn_update'|trans({}, 'SonataAdminBundle') }}"/>
                                {% else %}
                                    <input type="submit" class="btn" name="btn_create" value="{{ 'btn_create'|trans({}, 'SonataAdminBundle') }}"/>
                                {% endif %}
                            {% else %}
                                {% if admin.supportsPreviewMode %}
                                    <button class="btn btn-info persist-preview" name="btn_preview" type="submit">
                                        <i class="icon-eye-open"></i>
                                        {{ 'btn_preview'|trans({}, 'SonataAdminBundle') }}
                                    </button>
                                {% endif %}
                                {% if admin.id(object) is not null %}
                                    <input type="submit" class="btn btn-primary" name="btn_update_and_edit" value="{{ 'btn_update_and_edit_again'|trans({}, 'SonataAdminBundle') }}"/>

                                    {% if admin.hasroute('list') %}
                                        <input type="submit" class="btn" name="btn_update_and_list" value="{{ 'btn_update_and_return_to_list'|trans({}, 'SonataAdminBundle') }}"/>
                                    {% endif %}

                                    {% if admin.hasroute('delete') and admin.isGranted('DELETE', object) %}
                                        {{ 'delete_or'|trans({}, 'SonataAdminBundle') }}
                                        <a class="btn btn-danger" href="{{ admin.generateObjectUrl('delete', object) }}">{{ 'link_delete'|trans({}, 'SonataAdminBundle') }}</a>
                                    {% endif %}

                                    {% if admin.isAclEnabled() and admin.hasroute('acl') and admin.isGranted('MASTER', object) %}
                                        <a class="btn" href="{{ admin.generateObjectUrl('acl', object) }}">{{ 'link_edit_acl'|trans({}, 'SonataAdminBundle') }}</a>
                                    {% endif %}
                                {% else %}
                                    {% if admin.hasroute('edit') %}
                                        <input class="btn btn-primary" type="submit" name="btn_create_and_edit" value="{{ 'btn_create_and_edit_again'|trans({}, 'SonataAdminBundle') }}"/>
                                    {% endif %}
                                    {% if admin.hasroute('list') %}
                                        <input type="submit" class="btn" name="btn_create_and_list" value="{{ 'btn_create_and_return_to_list'|trans({}, 'SonataAdminBundle') }}"/>
                                    {% endif %}
                                    <input class="btn" type="submit" name="btn_create_and_create" value="{{ 'btn_create_and_create_a_new_one'|trans({}, 'SonataAdminBundle') }}"/>
                                {% endif %}
                            {% endif %}
                        </div>
                    {% endblock formactions %}
                </div>
            </section>
        </form>
    {% endif%}

    <script>
        var index,
            number = 0,
            holderCopy,
            holder = $('#main-create-holder').clone(),
            btnAddRow = $('#addrow'),
            selectBox = $('<select name="_fields[0][type]" class="create-input-type" id="0_type"><option value="textfield">Textfield</option><option value="textarea">Textarea</option></select>'),
            selectBoxClone;

        // add a selectbox dynamically to first row
        $('#main-create-holder').append(selectBox.select2());

        btnAddRow.on('click', function(){

            //make a copy of the holder
            holderCopy = holder.clone();
            holderCopy.removeAttr("id");

            //clear all preset values
            $.each(holderCopy.find("input"), function(index, event){

                var attr = $(this).attr('name');

                if (typeof attr !== 'undefined' && attr !== false && attr.indexOf("field") >= 0) {

                    //set the name +1
                    index = 8;
                    number = number + 1;

                    selectBoxClone = selectBox.clone();

                    selectBoxClone.attr("name", selectBox.attr("name").replaceIndex(index, number));
                    selectBoxClone.attr("id", selectBox.attr("id").replaceIndex(1, number));

                    $(this).after(selectBoxClone);

                    $(this).attr("name",  $(this).attr("name").replaceIndex(index, number));
                    $(this).attr("id",  $(this).attr("id").replaceIndex(1, number));
                }
            });
            selectBoxClone.select2();
            $('#btnAddRow-holder').before(holderCopy);

            //delete row button
            var deleteRowButton = holderCopy.find('.delete-row');

            deleteRowButton.css('display', 'inline-block');
            deleteRowButton.on('click', function(){
                $(this).parent().remove();
            });

            //prevent from submitting the form
            return false;

        });

        String.prototype.replaceIndex = function(index, value) {
            return this.substr(0, index) + value + this.substr(index + 1);
        }
    </script>
{% endblock %}
