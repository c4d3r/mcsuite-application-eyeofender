parameters:
    # ... other parameters
    security.acl.permission.map.class: Sonata\AdminBundle\Security\Acl\Permission\AdminPermissionMap
    # optionally use a custom MaskBuilder
    #sonata.admin.security.mask.builder.class: Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder
security:
    acl:
        connection: default
    access_decision_manager:
        # strategy can be: affirmative, unanimous or consensus
        strategy: unanimous
    encoders:
        "Maxim\CMSBundle\Entity\User": { algorithm: sha1, encode_as_base64: false, iterations: 0 }   # You'll set this to sha1 when you have everything working.

    providers:
        default:
            entity: { class: Maxim\CMSBundle\Entity\User, property: username } # This is an ORM entity and username is just the username property of the entity.
    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            switch_user: { role: ROLE_ADMIN }
            pattern: ^/
            form_login:
                login_path: /login
                check_path: /login_check
                success_handler: authentication_handler
                failure_handler: authentication_handler
                use_referer: true
                default_target_path: /
            anonymous:    true
            remember-me:
                key: "%secret%"
                lifetime: 3156000
                path: /
                domain: ~
                always_remember_me: true
            logout:
                path: /logout
                target: /
    access_control:
        - { path: ^/admin, role: ROLE_STAFF }
        - { path: ^/shop/ipn/paypal, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/shop/step, role: IS_AUTHENTICATED_REMEMBERED }
        - { path: ^/shop/confirm, role: IS_AUTHENTICATED_REMEMBERED }
        - { path: ^/application, role: IS_AUTHENTICATED_REMEMBERED }
        - { path: ^/account, role: IS_AUTHENTICATED_REMEMBERED }
        - { path: ^/login, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/home, role: IS_AUTHENTICATED_ANONYMOUSLY }
        #- { path: ^/forum, allow_if: "!has_role('ROLE_BANNED')" }
        - { path: ^/, roles: IS_AUTHENTICATED_ANONYMOUSLY }
